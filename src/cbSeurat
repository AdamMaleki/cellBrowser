#!/usr/bin/env Rscript

library(argparser, quietly=TRUE)


loadSeurat <- function(input) {
  if (endsWith(input, ".rds")) {
    seurat <- readRDS(input)
  } else {
    e <- new.env()
    load(input, envir = e)
    names <- ls(e)
    if (length(names) != 1) {
      stop(sprintf(
        "File %s contains several values, don't know how to handle this. Values: %s",
        input,
        paste(names, collapse = ", ")
      ))
    }
    seurat <- get(names[1], envir = e)
  }
  return(seurat)
}

saveExpression <- function(seurat, dir) {
  df <- as.data.frame(as.matrix(seurat@data))
  df <- data.frame(gene=rownames(seurat@data), df)
  write.table(df, sep="\t", file=file.path(dir, "exprMatrix.tsv"), quote = FALSE, row.names = FALSE)
}

saveTSNE <- function(seurat, dir, order) {
  df <- data.frame(
    cellId=rownames(seurat@dr$tsne@cell.embeddings), 
    x=seurat@dr$tsne@cell.embeddings[,1], 
    y=seurat@dr$tsne@cell.embeddings[,2]
  )
  write.table(df[order, ], sep="\t", file=file.path(dir, "tsne.coords.tsv"), quote = FALSE, row.names = FALSE)
}

checkMeta <- function(seurat, fields) {
  available <- colnames(seurat@meta.data)
  
  if (length(fields) < 1 || is.na(fields)) {
    stop(paste("No meta fields specified. Available:", paste(available, collapse = ", ")))
  }
  if (!all(fields %in% available)) {
    unavailable <- fields[!(fields %in% available)]
    stop(sprintf(
      "Specifiend meta fields not found: %s. Available: %s",
      paste(unavailable, collapse = ", "),
      paste(available, collapse = ", ")
    ))
  }
}

saveMeta <- function(seurat, dir, order, fields) {
  df <- seurat@meta.data[order, fields]
  df <- data.frame(Cell=rownames(seurat@meta.data), df)
  colnames(df) <- c("Cell", fields)
  write.table(df, sep="\t", file=file.path(dir, "meta.tsv"), quote = FALSE, row.names=FALSE)
}

extractTsv <- function(args) {
  seurat <- loadSeurat(args$file)
  checkMeta(seurat, args$meta)
  
  cell_order <- colnames(seurat@data)
  
  saveExpression(seurat, args$outDir)
  saveTSNE(seurat, args$outDir, cell_order)
  saveMeta(seurat, args$outDir, cell_order, args$meta)
}

main <- function() {
  p <- arg_parser("Create Cell browser compatible tsv files form Seurat object")
  p <- add_argument(p, "file", help="Seurat object file")
  p <- add_argument(p, "--outDir", help="output directory")
  p <- add_argument(p, "--name", help="name of dataset in cell browser", default="cbSeurat-Data")
  p <- add_argument(p, "--meta", help="meta fields to export, space separated", nargs = Inf)
  
  extractTsv(parse_args(p))
}

main()
